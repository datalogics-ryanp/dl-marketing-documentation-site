{"_path":"/adobe-pdf-library/java/best-practices/font-unicode","_dir":"best-practices","_draft":false,"_partial":false,"_locale":"","title":"Font & Unicode","description":"Adobe PDF Library Java/Maven","icon":null,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"font-object-from-a-name"},"children":[{"type":"text","value":"Font Object from a Name"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When creating a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Font"}]},{"type":"text","value":" object from a name, if the found font is a Type0 font, an Identity encoding is used. Otherwise, it makes a font with the default encoding (MacRomanEncoding on Mac, WinAnsiEncoding elsewhere, or for Symbol fonts, their own custom encoding)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When adding "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Text to a Page"}]},{"type":"text","value":", the Library checks to see if the Text is representable in the font's encoding. If not, then it makes a Type0 font with an Identity-H encoding. For non-Type0 fonts, this may result in two versions of a font in the output document."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"EmbedFonts()"}]}]},{"type":"text","value":" **** method of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Document"}]},{"type":"text","value":" class should be called before saving as a best practice."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When saving, the Library enumerates all the fonts in the document, and makes sure that any required Unicode and Width information is created to ensure proper text extraction and display."}]},{"type":"element","tag":"h2","props":{"id":"pdfstring-objects"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" Objects"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" objects offer two properties for accessing their contents:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"They are stored within a PDF file encoded either in UTF-16BE or in PDFDocEncoding (an 8-bit encoding scheme that can encode all of ISO Latin-1)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"They can be created with an input string in either encoding. Most "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" constructors will attempt to convert the data string to PDFDocEncoding if it can be converted without a loss of information; otherwise they will save it in UTF-16BE. If you want the string to be encoded in UTF-16BE even if it could be converted to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFDocEncoding"}]},{"type":"text","value":", use a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" constructor that takes the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"storedAsUTF16"}]},{"type":"text","value":" argument, with that flag set to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"true"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"pdfstring-objects-properties"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" Objects Properties"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Value"}]},{"type":"text","value":" property will convert the string from its internal encoding to a Unicode string object appropriate to the platform (encoded as UTF-16). This is useful for cases where the object represents human-readable text."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Bytes"}]},{"type":"text","value":" property returns the contents of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PDFString"}]},{"type":"text","value":" object as they are stored in the file, without respect to an encoding. This is useful for cases where the object contains binary data."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"font-object-from-a-name","depth":2,"text":"Font Object from a Name"},{"id":"pdfstring-objects","depth":2,"text":"PDFString Objects","children":[{"id":"pdfstring-objects-properties","depth":3,"text":"PDFString Objects Properties"}]}]}},"_type":"markdown","_id":"content:1.adobe-pdf-library:6.java:5.best-practices:4.font-unicode.md","_source":"content","_file":"1.adobe-pdf-library/6.java/5.best-practices/4.font-unicode.md","_stem":"1.adobe-pdf-library/6.java/5.best-practices/4.font-unicode","_extension":"md"}